{"ast":null,"code":"var _jsxFileName = \"/Users/randeepjr/Desktop/my-app/src/context/RecipeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\n\n// Create the context to store the recipes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/createContext();\n\n// Create a provider component to manage the recipes\nexport const RecipeProvider = ({\n  children\n}) => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n\n  // Function to fetch recipes from the backend\n  const fetchRecipes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/recipes'); // Replace with your backend URL\n      setRecipes(response.data); // Assuming the data from backend is an array of recipes\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n    }\n  };\n\n  // Fetch recipes when the component mounts\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  // Function to add a new recipe\n  const addRecipe = async newRecipe => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/recipes', newRecipe); // Replace with your backend URL\n      setRecipes([...recipes, response.data]); // Update state with the new recipe from the backend\n      console.log('New Recipe Added:', response.data); // Debug log to check if recipe is added\n    } catch (error) {\n      console.error('Error adding recipe:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: {\n      recipes,\n      addRecipe\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeProvider, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = RecipeProvider;\nvar _c;\n$RefreshReg$(_c, \"RecipeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","RecipeContext","RecipeProvider","children","_s","recipes","setRecipes","fetchRecipes","response","get","data","error","console","addRecipe","newRecipe","post","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/randeepjr/Desktop/my-app/src/context/RecipeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\n\n// Create the context to store the recipes\nexport const RecipeContext = createContext();\n\n// Create a provider component to manage the recipes\nexport const RecipeProvider = ({ children }) => {\n  const [recipes, setRecipes] = useState([]);\n\n  // Function to fetch recipes from the backend\n  const fetchRecipes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/recipes');  // Replace with your backend URL\n      setRecipes(response.data); // Assuming the data from backend is an array of recipes\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n    }\n  };\n\n  // Fetch recipes when the component mounts\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  // Function to add a new recipe\n  const addRecipe = async (newRecipe) => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/recipes', newRecipe);  // Replace with your backend URL\n      setRecipes([...recipes, response.data]); // Update state with the new recipe from the backend\n      console.log('New Recipe Added:', response.data);  // Debug log to check if recipe is added\n    } catch (error) {\n      console.error('Error adding recipe:', error);\n    }\n  };\n\n  return (\n    <RecipeContext.Provider value={{ recipes, addRecipe }}>\n      {children}\n    </RecipeContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAE;MACxEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACdU,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,SAAS,GAAG,MAAOC,SAAS,IAAK;IACrC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACiB,IAAI,CAAC,mCAAmC,EAAED,SAAS,CAAC,CAAC,CAAE;MACpFR,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEG,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MACzCE,OAAO,CAACI,GAAG,CAAC,mBAAmB,EAAER,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;IACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,OAAO;MAAEQ;IAAU,CAAE;IAAAV,QAAA,EACnDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAClB,EAAA,CAlCWF,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
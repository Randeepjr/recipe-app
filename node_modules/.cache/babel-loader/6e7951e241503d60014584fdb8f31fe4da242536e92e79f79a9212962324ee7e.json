{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'axios';// Import axios\n// Create the context to store the recipes\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const RecipeContext=/*#__PURE__*/createContext();// Create a provider component to manage the recipes\nexport const RecipeProvider=_ref=>{let{children}=_ref;const[recipes,setRecipes]=useState([]);// Function to fetch recipes from the backend\nconst fetchRecipes=async()=>{try{const response=await axios.get('http://localhost:5001/api/recipes');// Replace with your backend URL\nsetRecipes(response.data);// Assuming the data from backend is an array of recipes\n}catch(error){console.error('Error fetching recipes:',error);}};// Fetch recipes when the component mounts\nuseEffect(()=>{fetchRecipes();},[]);// Function to add a new recipe\nconst addRecipe=async newRecipe=>{try{const response=await axios.post('http://localhost:5001/api/recipes',newRecipe);// Replace with your backend URL\nsetRecipes([...recipes,response.data]);// Update state with the new recipe from the backend\nconsole.log('New Recipe Added:',response.data);// Debug log to check if recipe is added\n}catch(error){console.error('Error adding recipe:',error);}};return/*#__PURE__*/_jsx(RecipeContext.Provider,{value:{recipes,addRecipe},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsx","_jsx","RecipeContext","RecipeProvider","_ref","children","recipes","setRecipes","fetchRecipes","response","get","data","error","console","addRecipe","newRecipe","post","log","Provider","value"],"sources":["/Users/randeepjr/Desktop/my-app/src/context/RecipeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\n\n// Create the context to store the recipes\nexport const RecipeContext = createContext();\n\n// Create a provider component to manage the recipes\nexport const RecipeProvider = ({ children }) => {\n  const [recipes, setRecipes] = useState([]);\n\n  // Function to fetch recipes from the backend\n  const fetchRecipes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/recipes');  // Replace with your backend URL\n      setRecipes(response.data); // Assuming the data from backend is an array of recipes\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n    }\n  };\n\n  // Fetch recipes when the component mounts\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  // Function to add a new recipe\n  const addRecipe = async (newRecipe) => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/recipes', newRecipe);  // Replace with your backend URL\n      setRecipes([...recipes, response.data]); // Update state with the new recipe from the backend\n      console.log('New Recipe Added:', response.data);  // Debug log to check if recipe is added\n    } catch (error) {\n      console.error('Error adding recipe:', error);\n    }\n  };\n\n  return (\n    <RecipeContext.Provider value={{ recipes, addRecipe }}>\n      {children}\n    </RecipeContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAE;AAE3B;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,aAAa,cAAGN,aAAa,CAAC,CAAC,CAE5C;AACA,MAAO,MAAM,CAAAO,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE1C;AACA,KAAM,CAAAW,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC,CAAG;AACxEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC7B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAED;AACAd,SAAS,CAAC,IAAM,CACdU,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAM,SAAS,CAAG,KAAO,CAAAC,SAAS,EAAK,CACrC,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACiB,IAAI,CAAC,mCAAmC,CAAED,SAAS,CAAC,CAAG;AACpFR,UAAU,CAAC,CAAC,GAAGD,OAAO,CAAEG,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;AACzCE,OAAO,CAACI,GAAG,CAAC,mBAAmB,CAAER,QAAQ,CAACE,IAAI,CAAC,CAAG;AACpD,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAED,mBACEX,IAAA,CAACC,aAAa,CAACgB,QAAQ,EAACC,KAAK,CAAE,CAAEb,OAAO,CAAEQ,SAAU,CAAE,CAAAT,QAAA,CACnDA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/randeepjr/Desktop/my-app/src/context/RecipeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the context to store the recipes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/createContext();\n\n// Create a provider component to manage the recipes\nexport const RecipeProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize state from localStorage or default to an empty array\n  const [recipes, setRecipes] = useState(() => {\n    const savedRecipes = localStorage.getItem('recipes');\n    return savedRecipes ? JSON.parse(savedRecipes) : [];\n  });\n\n  // Function to add a new recipe\n  const addRecipe = newRecipe => {\n    const updatedRecipes = [...recipes, newRecipe];\n    setRecipes(updatedRecipes);\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes)); // Save updated recipes to localStorage\n  };\n\n  // Sync recipes to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n  }, [recipes]);\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: {\n      recipes,\n      addRecipe\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeProvider, \"3s3ho9/ku5lzp+RWQeLgovj/ZC8=\");\n_c = RecipeProvider;\nvar _c;\n$RefreshReg$(_c, \"RecipeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","RecipeContext","RecipeProvider","children","_s","recipes","setRecipes","savedRecipes","localStorage","getItem","JSON","parse","addRecipe","newRecipe","updatedRecipes","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/randeepjr/Desktop/my-app/src/context/RecipeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create the context to store the recipes\nexport const RecipeContext = createContext();\n\n// Create a provider component to manage the recipes\nexport const RecipeProvider = ({ children }) => {\n  // Initialize state from localStorage or default to an empty array\n  const [recipes, setRecipes] = useState(() => {\n    const savedRecipes = localStorage.getItem('recipes');\n    return savedRecipes ? JSON.parse(savedRecipes) : [];\n  });\n\n  // Function to add a new recipe\n  const addRecipe = (newRecipe) => {\n    const updatedRecipes = [...recipes, newRecipe];\n    setRecipes(updatedRecipes);\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes)); // Save updated recipes to localStorage\n  };\n\n  // Sync recipes to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n  }, [recipes]);\n\n  return (\n    <RecipeContext.Provider value={{ recipes, addRecipe }}>\n      {children}\n    </RecipeContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC3C,MAAMU,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACpD,OAAOF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAG,EAAE;EACrD,CAAC,CAAC;;EAEF;EACA,MAAMK,SAAS,GAAIC,SAAS,IAAK;IAC/B,MAAMC,cAAc,GAAG,CAAC,GAAGT,OAAO,EAAEQ,SAAS,CAAC;IAC9CP,UAAU,CAACQ,cAAc,CAAC;IAC1BN,YAAY,CAACO,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACM,SAAS,CAACF,cAAc,CAAC,CAAC,CAAC,CAAC;EACnE,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACdU,YAAY,CAACO,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACM,SAAS,CAACX,OAAO,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,oBACEL,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,OAAO;MAAEO;IAAU,CAAE;IAAAT,QAAA,EACnDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAClB,EAAA,CAxBWF,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}